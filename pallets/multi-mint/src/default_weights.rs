//! Autogenerated weights for multi_mint
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 2.0.0
//! DATE: 2020-12-04, STEPS: [10, ], REPEAT: 4, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// /home/willi/polimec/polimec-node/target/release/node-polimec
// benchmark
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// -e
// *
// -p
// multi_mint
// -s
// 10
// -r
// 4
// --output
// ../pallets/multi-mint/src/default_weights.rs
// --template
// ../.maintain/weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for multi_mint.
pub trait WeightInfo {
	fn register() -> Weight;
	fn mint() -> Weight;
	fn unlock_trading() -> Weight;
	fn lock_trading() -> Weight;
	fn transfer() -> Weight;
}

// Default weights for this pallet, if not used in a different runtime
impl WeightInfo for () {
	fn register() -> Weight {
		(32_351_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn mint() -> Weight {
		(56_165_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
	fn unlock_trading() -> Weight {
		(33_323_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn lock_trading() -> Weight {
		(32_993_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn transfer() -> Weight {
		(78_368_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(2 as Weight))
	}
}
