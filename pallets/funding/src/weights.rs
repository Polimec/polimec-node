
//! Autogenerated weights for pallet_funding
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-13, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `pop-os`, CPU: `13th Gen Intel(R) Core(TM) i9-13900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/release/polimec-standalone-node
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_funding
// --extrinsic
// *
// --execution=wasm
// --heap-pages=4096
// --output=pallets/funding/src/weights.rs
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_funding.
pub trait WeightInfo {
	fn note_image() -> Weight;
	fn create() -> Weight;
	fn start_evaluation() -> Weight;
	fn bond() -> Weight;
	fn edit_metadata() -> Weight;
	fn start_auction() -> Weight;
	fn bid() -> Weight;
	fn contribute() -> Weight;
	fn claim_contribution_tokens() -> Weight;
	fn on_initialize() -> Weight;
}

/// Weights for pallet_funding using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: PolimecFunding Images (r:0 w:1)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	fn note_image() -> Weight {
		// Minimum execution time: 5_971 nanoseconds.
		Weight::from_ref_time(6_350_000)
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding Images (r:1 w:0)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding NextProjectId (r:1 w:1)
	// Proof Skipped: PolimecFunding NextProjectId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:0 w:1)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:0 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsIssuers (r:0 w:1)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	fn create() -> Weight {
		// Minimum execution time: 12_763 nanoseconds.
		Weight::from_ref_time(13_166_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsActive (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsActive (max_values: Some(1), max_size: None, mode: Measured)
	fn start_evaluation() -> Weight {
		// Minimum execution time: 12_092 nanoseconds.
		Weight::from_ref_time(12_491_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: PolimecFunding Bonds (r:1 w:1)
	// Proof Skipped: PolimecFunding Bonds (max_values: None, max_size: None, mode: Measured)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	fn bond() -> Weight {
		// Minimum execution time: 18_361 nanoseconds.
		Weight::from_ref_time(19_198_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Images (r:1 w:0)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:1 w:1)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	fn edit_metadata() -> Weight {
		// Minimum execution time: 14_043 nanoseconds.
		Weight::from_ref_time(14_595_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	fn start_auction() -> Weight {
		// Minimum execution time: 13_100 nanoseconds.
		Weight::from_ref_time(13_575_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:1 w:0)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding AuctionsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding AuctionsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn bid() -> Weight {
		// Minimum execution time: 24_173 nanoseconds.
		Weight::from_ref_time(25_037_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	// Proof Skipped: PolimecFunding Contributions (max_values: None, max_size: None, mode: Measured)
	fn contribute() -> Weight {
		// Minimum execution time: 28_746 nanoseconds.
		Weight::from_ref_time(29_451_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	// Proof Skipped: PolimecFunding Contributions (max_values: None, max_size: None, mode: Measured)
	// Storage: Assets Asset (r:1 w:1)
	// Proof: Assets Asset (max_values: None, max_size: Some(210), added: 2685, mode: MaxEncodedLen)
	// Storage: Assets Account (r:1 w:1)
	// Proof: Assets Account (max_values: None, max_size: Some(102), added: 2577, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_contribution_tokens() -> Weight {
		// Minimum execution time: 25_304 nanoseconds.
		Weight::from_ref_time(26_555_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsActive (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsActive (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:100 w:100)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Bonds (r:200 w:0)
	// Proof Skipped: PolimecFunding Bonds (max_values: None, max_size: None, mode: Measured)
	fn on_initialize() -> Weight {
		// Minimum execution time: 1_229_997 nanoseconds.
		Weight::from_ref_time(1_238_504_000)
			.saturating_add(T::DbWeight::get().reads(301))
			.saturating_add(T::DbWeight::get().writes(100))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: PolimecFunding Images (r:0 w:1)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	fn note_image() -> Weight {
		// Minimum execution time: 5_971 nanoseconds.
		Weight::from_ref_time(6_350_000)
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: PolimecFunding Images (r:1 w:0)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding NextProjectId (r:1 w:1)
	// Proof Skipped: PolimecFunding NextProjectId (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:0 w:1)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:0 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsIssuers (r:0 w:1)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	fn create() -> Weight {
		// Minimum execution time: 12_763 nanoseconds.
		Weight::from_ref_time(13_166_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsActive (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsActive (max_values: Some(1), max_size: None, mode: Measured)
	fn start_evaluation() -> Weight {
		// Minimum execution time: 12_092 nanoseconds.
		Weight::from_ref_time(12_491_000)
			.saturating_add(RocksDbWeight::get().reads(3))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: PolimecFunding Bonds (r:1 w:1)
	// Proof Skipped: PolimecFunding Bonds (max_values: None, max_size: None, mode: Measured)
	// Storage: Balances Locks (r:1 w:1)
	// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	fn bond() -> Weight {
		// Minimum execution time: 18_361 nanoseconds.
		Weight::from_ref_time(19_198_000)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Images (r:1 w:0)
	// Proof Skipped: PolimecFunding Images (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:1 w:1)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	fn edit_metadata() -> Weight {
		// Minimum execution time: 14_043 nanoseconds.
		Weight::from_ref_time(14_595_000)
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	fn start_auction() -> Weight {
		// Minimum execution time: 13_100 nanoseconds.
		Weight::from_ref_time(13_575_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Projects (r:1 w:0)
	// Proof Skipped: PolimecFunding Projects (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding AuctionsInfo (r:1 w:1)
	// Proof Skipped: PolimecFunding AuctionsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn bid() -> Weight {
		// Minimum execution time: 24_173 nanoseconds.
		Weight::from_ref_time(25_037_000)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsIssuers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	// Proof Skipped: PolimecFunding Contributions (max_values: None, max_size: None, mode: Measured)
	fn contribute() -> Weight {
		// Minimum execution time: 28_746 nanoseconds.
		Weight::from_ref_time(29_451_000)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	// Proof Skipped: PolimecFunding Contributions (max_values: None, max_size: None, mode: Measured)
	// Storage: Assets Asset (r:1 w:1)
	// Proof: Assets Asset (max_values: None, max_size: Some(210), added: 2685, mode: MaxEncodedLen)
	// Storage: Assets Account (r:1 w:1)
	// Proof: Assets Account (max_values: None, max_size: Some(102), added: 2577, mode: MaxEncodedLen)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_contribution_tokens() -> Weight {
		// Minimum execution time: 25_304 nanoseconds.
		Weight::from_ref_time(26_555_000)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsActive (r:1 w:0)
	// Proof Skipped: PolimecFunding ProjectsActive (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: PolimecFunding ProjectsInfo (r:100 w:100)
	// Proof Skipped: PolimecFunding ProjectsInfo (max_values: None, max_size: None, mode: Measured)
	// Storage: PolimecFunding Bonds (r:200 w:0)
	// Proof Skipped: PolimecFunding Bonds (max_values: None, max_size: None, mode: Measured)
	fn on_initialize() -> Weight {
		// Minimum execution time: 1_229_997 nanoseconds.
		Weight::from_ref_time(1_238_504_000)
			.saturating_add(RocksDbWeight::get().reads(301))
			.saturating_add(RocksDbWeight::get().writes(100))
	}
}