[package]
name = 'pallet-funding'
authors = ['Polimec Foundation <info@polimec.org>']
documentation = "https://wiki.polimec.org/"
edition = "2021"
homepage = "https://www.polimec.org/"
license-file = "LICENSE"
readme = "README.md"
repository = "https://github.com/Polimec/polimec-node"
version = "0.1.0"
rust-version = "1.69.0"

[dependencies]
serde = { version = "*", optional = true }
parity-scale-codec = { version = "3.6.5", features = [
    "derive",
], default-features = false }
scale-info = { version = "2.9.0", default-features = false, features = [
    "derive",
] }
log.workspace = true

itertools = { version = "0.11.0", default-features = false }

# Substrate dependencies
frame-benchmarking = {workspace = true, optional = true}
frame-support.workspace = true
frame-system.workspace = true
sp-std.workspace = true
sp-runtime.workspace = true
sp-arithmetic.workspace = true
polimec-traits.workspace = true
parachains-common.workspace = true
sp-core.workspace = true
pallet-balances.workspace = true
sp-io.workspace = true
pallet-timestamp.workspace = true
xcm-builder.workspace = true
xcm.workspace = true
polimec-xcm-executor.workspace = true
pallet-xcm.workspace = true
polkadot-runtime.workspace = true
polkadot-runtime-parachains.workspace = true
polkadot-parachain.workspace = true

[dev-dependencies]
pallet-insecure-randomness-collective-flip.workspace = true
pallet-assets.workspace = true
pallet-linear-release.workspace = true
assert_matches2.workspace = true
xcm-builder.workspace = true
xcm-executor.workspace = true
[features]
default = [ "std" ]
std = [
	"serde",
	"parity-scale-codec/std",
	"scale-info/std",
	"log/std",
	"itertools/use_std",
	"frame-benchmarking?/std",
	"frame-support/std",
	"frame-system/std",
	"sp-std/std",
	"sp-runtime/std",
	"sp-arithmetic/std",
	"polimec-traits/std",
	"parachains-common/std",
	"sp-core/std",
	"pallet-balances/std",
	"sp-io/std",
	"pallet-timestamp/std",
	"xcm-builder/std",
	"xcm/std",
	"polimec-xcm-executor/std",
	"pallet-xcm/std",
	"polkadot-runtime/std",
	"polkadot-runtime-parachains/std",
	"polkadot-parachain/std",

	"pallet-insecure-randomness-collective-flip/std",
	"pallet-assets/std",
	"pallet-linear-release/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"polimec-traits/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"itertools/use_alloc",
	"pallet-linear-release/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"polimec-xcm-executor/runtime-benchmarks",
	"polkadot-parachain/runtime-benchmarks",
	"polkadot-runtime/runtime-benchmarks",
	"polkadot-runtime-parachains/runtime-benchmarks"
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-linear-release/try-runtime",
	"polimec-traits/try-runtime",
	"sp-runtime/try-runtime",
]
testing-node = [
]
