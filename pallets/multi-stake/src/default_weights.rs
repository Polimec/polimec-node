//! Autogenerated weights for multi_stake
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 2.0.0
//! DATE: 2020-12-07, STEPS: [10, ], REPEAT: 4, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// /home/willi/polimec/polimec-node/target/release/node-polimec
// benchmark
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// -e
// *
// -p
// multi_stake
// -s
// 10
// -r
// 4
// --output
// ../pallets/multi-stake/src/default_weights.rs
// --template
// ../.maintain/weight-template.hbs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
	traits::Get,
	weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for multi_stake.
pub trait WeightInfo {
	fn bond() -> Weight;
	fn bond_extra() -> Weight;
	fn unbond(p: u32) -> Weight;
	fn set_controller() -> Weight;
	fn force_unstake() -> Weight;
	fn withdraw_unbonded_update(l: u32) -> Weight;
	fn withdraw_unbonded_kill(l: u32) -> Weight;
	fn rebond(l: u32) -> Weight;
	fn reap_stash() -> Weight;
}

// Default weights for this pallet, if not used in a different runtime
impl WeightInfo for () {
	fn bond() -> Weight {
		(108_625_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	fn bond_extra() -> Weight {
		(90_621_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn unbond(p: u32) -> Weight {
		(82_647_000 as Weight)
			.saturating_add((8_857_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(p as Weight)))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn set_controller() -> Weight {
		(44_094_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn force_unstake() -> Weight {
		(75_152_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	fn withdraw_unbonded_update(l: u32) -> Weight {
		(76_664_000 as Weight)
			.saturating_add((121_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn withdraw_unbonded_kill(l: u32) -> Weight {
		(107_777_000 as Weight)
			.saturating_add((116_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
	fn rebond(l: u32) -> Weight {
		(53_265_000 as Weight)
			.saturating_add((116_000 as Weight).saturating_mul(l as Weight))
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn reap_stash() -> Weight {
		(70_393_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(5 as Weight))
	}
}
