
//! Autogenerated weights for `pallet_funding`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-02-05, STEPS: `10`, REPEAT: `5`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Juans-MBP.home`, CPU: `<UNKNOWN>`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("polimec-rococo-local")`, DB CACHE: 1024

// Executed Command:
// target/debug/polimec-parachain-node
// benchmark
// pallet
// --chain=polimec-rococo-local
// --steps=10
// --repeat=5
// --pallet=pallet_funding
// --extrinsic=start_community_funding_failure
// --output
// ./debug_weight_gen.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_funding`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_funding::WeightInfo for WeightInfo<T> {
	/// Storage: `PolimecFunding::ProjectsDetails` (r:1 w:1)
	/// Proof: `PolimecFunding::ProjectsDetails` (`max_values`: None, `max_size`: Some(349), added: 2824, mode: `MaxEncodedLen`)
	/// Storage: `PolimecFunding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `PolimecFunding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(334), added: 2809, mode: `MaxEncodedLen`)
	/// Storage: `PolimecFunding::Nonce` (r:1 w:1)
	/// Proof: `PolimecFunding::Nonce` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Random::RandomMaterial` (r:1 w:0)
	/// Proof: `Random::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `PolimecFunding::Bids` (r:1 w:0)
	/// Proof: `PolimecFunding::Bids` (`max_values`: None, `max_size`: Some(418), added: 2893, mode: `MaxEncodedLen`)
	/// Storage: `Oracle::Values` (r:1 w:0)
	/// Proof: `Oracle::Values` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PolimecFunding::Buckets` (r:1 w:0)
	/// Proof: `PolimecFunding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `PolimecFunding::ProjectsToUpdate` (r:1 w:1)
	/// Proof: `PolimecFunding::ProjectsToUpdate` (`max_values`: None, `max_size`: Some(622), added: 3097, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 99]`.
	fn start_community_funding_failure(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2654 + x * (4 Â±0)`
		//  Estimated: `4087`
		// Minimum execution time: 1_453_000_000 picoseconds.
		Weight::from_parts(1_487_504_532, 0)
			.saturating_add(Weight::from_parts(0, 4087))
			// Standard Error: 177_339
			.saturating_add(Weight::from_parts(731_091, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
