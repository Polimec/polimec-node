
//! Autogenerated weights for `pallet_funding`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-02-14, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `omegabit`, CPU: `13th Gen Intel(R) Core(TM) i9-13900K`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// target/release/polimec-standalone-node
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_funding
// --extrinsic
// *
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=runtimes/testnet/src/weights/pallet_funding.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_funding`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_funding::WeightInfo for WeightInfo<T> {
	// Storage: PolimecFunding Images (r:0 w:1)
	fn note_image() -> Weight {
		// Minimum execution time: 9_782 nanoseconds.
		Weight::from_ref_time(10_220_000)
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding Images (r:1 w:0)
	// Storage: PolimecFunding NextProjectId (r:1 w:1)
	// Storage: PolimecFunding Projects (r:0 w:1)
	// Storage: PolimecFunding ProjectsInfo (r:0 w:1)
	// Storage: PolimecFunding ProjectsIssuers (r:0 w:1)
	fn create() -> Weight {
		// Minimum execution time: 16_965 nanoseconds.
		Weight::from_ref_time(17_564_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Storage: PolimecFunding ProjectsActive (r:1 w:1)
	fn start_evaluation() -> Weight {
		// Minimum execution time: 16_604 nanoseconds.
		Weight::from_ref_time(17_264_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: PolimecFunding Bonds (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn bond() -> Weight {
		// Minimum execution time: 21_968 nanoseconds.
		Weight::from_ref_time(22_866_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding Images (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Storage: PolimecFunding Projects (r:1 w:1)
	fn edit_metadata() -> Weight {
		// Minimum execution time: 17_714 nanoseconds.
		Weight::from_ref_time(18_217_000)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	fn start_auction() -> Weight {
		// Minimum execution time: 18_732 nanoseconds.
		Weight::from_ref_time(19_368_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Storage: PolimecFunding Projects (r:1 w:0)
	// Storage: PolimecFunding AuctionsInfo (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn bid() -> Weight {
		// Minimum execution time: 30_677 nanoseconds.
		Weight::from_ref_time(31_556_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	fn contribute() -> Weight {
		// Minimum execution time: 35_378 nanoseconds.
		Weight::from_ref_time(37_756_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: PolimecFunding ProjectsInfo (r:1 w:0)
	// Storage: PolimecFunding Contributions (r:1 w:1)
	// Storage: Assets Asset (r:1 w:1)
	// Storage: Assets Account (r:1 w:1)
	// Storage: System Account (r:1 w:1)
	fn claim_contribution_tokens() -> Weight {
		// Minimum execution time: 32_708 nanoseconds.
		Weight::from_ref_time(33_885_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: PolimecFunding ProjectsActive (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:100 w:100)
	// Storage: PolimecFunding Bonds (r:200 w:0)
	fn on_initialize() -> Weight {
		// Minimum execution time: 1_226_056 nanoseconds.
		Weight::from_ref_time(1_236_572_000)
			.saturating_add(T::DbWeight::get().reads(301))
			.saturating_add(T::DbWeight::get().writes(100))
	}
}
