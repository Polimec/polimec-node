
//! Autogenerated weights for `pallet_funding`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-12-23, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `leoair.lan`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/polimec-standalone-node
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_funding
// --extrinsic
// *
// --execution=wasm
// --heap-pages=4096
// --output=runtimes/testnet/src/weights/pallet_funding.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_funding`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_funding::WeightInfo for WeightInfo<T> {
	// Storage: PolimecFunding ProjectId (r:1 w:1)
	// Storage: PolimecFunding Projects (r:0 w:1)
	// Storage: PolimecFunding ProjectsInfo (r:0 w:1)
	// Storage: PolimecFunding ProjectsIssuers (r:0 w:1)
	fn create() -> Weight {
		Weight::from_ref_time(22_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(1 as u64))
			.saturating_add(T::DbWeight::get().writes(4 as u64))
	}
	// Storage: PolimecFunding ProjectsIssuers (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:1 w:1)
	// Storage: PolimecFunding ProjectsActive (r:1 w:1)
	fn start_evaluation() -> Weight {
		Weight::from_ref_time(25_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: PolimecFunding ProjectsActive (r:1 w:0)
	// Storage: PolimecFunding ProjectsInfo (r:100 w:100)
	fn on_finalize() -> Weight {
		Weight::from_ref_time(815_000_000 as u64)
			.saturating_add(T::DbWeight::get().reads(101 as u64))
			.saturating_add(T::DbWeight::get().writes(100 as u64))
	}
}
