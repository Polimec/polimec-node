
//! Autogenerated weights for `pallet_funding`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 39.0.0
//! DATE: 2025-02-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-23-147`, CPU: `AMD EPYC 9R14`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("polimec-paseo-local")`, DB CACHE: 1024

// Executed Command:
// ./target/production/polimec-node
// benchmark
// pallet
// --chain=polimec-paseo-local
// --wasm-execution=compiled
// --pallet=pallet_funding
// --extrinsic=*
// --steps=50
// --repeat=20
// --output=./runtimes/polimec/src/weights/pallet_funding.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_funding`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_funding::WeightInfo for WeightInfo<T> {
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::NextProjectId` (r:1 w:1)
	/// Proof: `Funding::NextProjectId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Funding::DidWithActiveProjects` (r:1 w:1)
	/// Proof: `Funding::DidWithActiveProjects` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:0 w:1)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:0 w:1)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:0 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	fn create_project() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `288`
		//  Estimated: `3593`
		// Minimum execution time: 162_131_000 picoseconds.
		Weight::from_parts(163_351_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:0 w:1)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:0 w:1)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::DidWithActiveProjects` (r:0 w:1)
	/// Proof: `Funding::DidWithActiveProjects` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	fn remove_project() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `478`
		//  Estimated: `3795`
		// Minimum execution time: 129_491_000 picoseconds.
		Weight::from_parts(130_381_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:0 w:1)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:0 w:1)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	fn edit_project() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `478`
		//  Estimated: `3795`
		// Minimum execution time: 131_021_000 picoseconds.
		Weight::from_parts(132_641_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	fn start_evaluation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `742`
		//  Estimated: `3902`
		// Minimum execution time: 129_431_000 picoseconds.
		Weight::from_parts(131_531_000, 0)
			.saturating_add(Weight::from_parts(0, 3902))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::NextEvaluationId` (r:1 w:1)
	/// Proof: `Funding::NextEvaluationId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Oracle::Values` (r:1 w:0)
	/// Proof: `Oracle::Values` (`max_values`: None, `max_size`: Some(634), added: 3109, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Evaluations` (r:0 w:1)
	/// Proof: `Funding::Evaluations` (`max_values`: None, `max_size`: Some(337), added: 2812, mode: `MaxEncodedLen`)
	fn evaluate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1129`
		//  Estimated: `4099`
		// Minimum execution time: 182_641_000 picoseconds.
		Weight::from_parts(185_011_000, 0)
			.saturating_add(Weight::from_parts(0, 4099))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::DidWithActiveProjects` (r:0 w:1)
	/// Proof: `Funding::DidWithActiveProjects` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	fn end_evaluation_failure() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `443`
		//  Estimated: `3795`
		// Minimum execution time: 11_270_000 picoseconds.
		Weight::from_parts(11_760_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:0)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:1 w:1)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::NextBidId` (r:1 w:1)
	/// Proof: `Funding::NextBidId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Funding::BidBucketBounds` (r:10 w:10)
	/// Proof: `Funding::BidBucketBounds` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `Funding::AuctionBoughtUSD` (r:1 w:1)
	/// Proof: `Funding::AuctionBoughtUSD` (`max_values`: None, `max_size`: Some(118), added: 2593, mode: `MaxEncodedLen`)
	/// Storage: `Oracle::Values` (r:2 w:0)
	/// Proof: `Oracle::Values` (`max_values`: None, `max_size`: Some(634), added: 3109, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Metadata` (r:1 w:0)
	/// Proof: `ForeignAssets::Metadata` (`max_values`: None, `max_size`: Some(738), added: 3213, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Evaluations` (r:1 w:0)
	/// Proof: `Funding::Evaluations` (`max_values`: None, `max_size`: Some(337), added: 2812, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Asset` (r:1 w:1)
	/// Proof: `ForeignAssets::Asset` (`max_values`: None, `max_size`: Some(808), added: 3283, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Account` (r:2 w:2)
	/// Proof: `ForeignAssets::Account` (`max_values`: None, `max_size`: Some(732), added: 3207, mode: `MaxEncodedLen`)
	/// Storage: `Funding::CTAmountOversubscribed` (r:1 w:1)
	/// Proof: `Funding::CTAmountOversubscribed` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Bids` (r:0 w:10)
	/// Proof: `Funding::Bids` (`max_values`: None, `max_size`: Some(309), added: 2784, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 10]`.
	fn bid(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2899`
		//  Estimated: `7404 + x * (2535 ±0)`
		// Minimum execution time: 251_612_000 picoseconds.
		Weight::from_parts(176_988_794, 0)
			.saturating_add(Weight::from_parts(0, 7404))
			// Standard Error: 63_733
			.saturating_add(Weight::from_parts(80_874_394, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(15))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(8))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(x.into())))
			.saturating_add(Weight::from_parts(0, 2535).saturating_mul(x.into()))
	}
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:1 w:0)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::OutbidBidsCutoff` (r:1 w:1)
	/// Proof: `Funding::OutbidBidsCutoff` (`max_values`: None, `max_size`: Some(40), added: 2515, mode: `MaxEncodedLen`)
	/// Storage: `Funding::CTAmountOversubscribed` (r:1 w:1)
	/// Proof: `Funding::CTAmountOversubscribed` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Bids` (r:2 w:1)
	/// Proof: `Funding::Bids` (`max_values`: None, `max_size`: Some(309), added: 2784, mode: `MaxEncodedLen`)
	/// Storage: `Funding::BidBucketBounds` (r:1 w:0)
	/// Proof: `Funding::BidBucketBounds` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	fn process_next_oversubscribed_bid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1640`
		//  Estimated: `6558`
		// Minimum execution time: 38_730_000 picoseconds.
		Weight::from_parts(40_070_000, 0)
			.saturating_add(Weight::from_parts(0, 6558))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:1 w:0)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `Funding::CTAmountOversubscribed` (r:1 w:0)
	/// Proof: `Funding::CTAmountOversubscribed` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsInAuctionRound` (r:0 w:1)
	/// Proof: `Funding::ProjectsInAuctionRound` (`max_values`: None, `max_size`: Some(20), added: 2495, mode: `MaxEncodedLen`)
	/// Storage: `Funding::DidWithActiveProjects` (r:0 w:1)
	/// Proof: `Funding::DidWithActiveProjects` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	fn end_funding_project_successful() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `900`
		//  Estimated: `3902`
		// Minimum execution time: 33_130_000 picoseconds.
		Weight::from_parts(34_851_000, 0)
			.saturating_add(Weight::from_parts(0, 3902))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Asset` (r:1 w:1)
	/// Proof: `ContributionTokens::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Metadata` (r:1 w:1)
	/// Proof: `ContributionTokens::Metadata` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Account` (r:1 w:1)
	/// Proof: `ContributionTokens::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Buckets` (r:1 w:0)
	/// Proof: `Funding::Buckets` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `ProxyBonding::Releases` (r:0 w:1)
	/// Proof: `ProxyBonding::Releases` (`max_values`: None, `max_size`: Some(43), added: 2518, mode: `MaxEncodedLen`)
	fn start_settlement() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `965`
		//  Estimated: `3902`
		// Minimum execution time: 73_401_000 picoseconds.
		Weight::from_parts(74_961_000, 0)
			.saturating_add(Weight::from_parts(0, 3902))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Funding::Evaluations` (r:1 w:1)
	/// Proof: `Funding::Evaluations` (`max_values`: None, `max_size`: Some(337), added: 2812, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:0)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Account` (r:1 w:1)
	/// Proof: `ContributionTokens::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Asset` (r:1 w:1)
	/// Proof: `ContributionTokens::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UserMigrations` (r:1 w:1)
	/// Proof: `Funding::UserMigrations` (`max_values`: None, `max_size`: Some(1040079), added: 1042554, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UnmigratedCounter` (r:1 w:1)
	/// Proof: `Funding::UnmigratedCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	fn settle_rewarded_evaluation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2286`
		//  Estimated: `1043544`
		// Minimum execution time: 91_920_000 picoseconds.
		Weight::from_parts(94_701_000, 0)
			.saturating_add(Weight::from_parts(0, 1043544))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:0)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Bids` (r:1 w:1)
	/// Proof: `Funding::Bids` (`max_values`: None, `max_size`: Some(309), added: 2784, mode: `MaxEncodedLen`)
	/// Storage: `Oracle::Values` (r:2 w:0)
	/// Proof: `Oracle::Values` (`max_values`: None, `max_size`: Some(634), added: 3109, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Metadata` (r:1 w:0)
	/// Proof: `ForeignAssets::Metadata` (`max_values`: None, `max_size`: Some(738), added: 3213, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Asset` (r:1 w:1)
	/// Proof: `ForeignAssets::Asset` (`max_values`: None, `max_size`: Some(808), added: 3283, mode: `MaxEncodedLen`)
	/// Storage: `ForeignAssets::Account` (r:3 w:3)
	/// Proof: `ForeignAssets::Account` (`max_values`: None, `max_size`: Some(732), added: 3207, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Account` (r:1 w:1)
	/// Proof: `ContributionTokens::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `ContributionTokens::Asset` (r:1 w:1)
	/// Proof: `ContributionTokens::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UserMigrations` (r:1 w:1)
	/// Proof: `Funding::UserMigrations` (`max_values`: None, `max_size`: Some(1040079), added: 1042554, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UnmigratedCounter` (r:1 w:1)
	/// Proof: `Funding::UnmigratedCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn settle_accepted_bid_with_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3701`
		//  Estimated: `1043544`
		// Minimum execution time: 198_261_000 picoseconds.
		Weight::from_parts(201_301_000, 0)
			.saturating_add(Weight::from_parts(0, 1043544))
			.saturating_add(T::DbWeight::get().reads(16))
			.saturating_add(T::DbWeight::get().writes(11))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Evaluations` (r:1 w:0)
	/// Proof: `Funding::Evaluations` (`max_values`: None, `max_size`: Some(337), added: 2812, mode: `MaxEncodedLen`)
	/// Storage: `Funding::Bids` (r:1 w:0)
	/// Proof: `Funding::Bids` (`max_values`: None, `max_size`: Some(309), added: 2784, mode: `MaxEncodedLen`)
	fn mark_project_as_settled() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `635`
		//  Estimated: `3802`
		// Minimum execution time: 25_960_000 picoseconds.
		Weight::from_parts(27_270_000, 0)
			.saturating_add(Weight::from_parts(0, 3802))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	fn start_offchain_migration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `3795`
		// Minimum execution time: 136_991_000 picoseconds.
		Weight::from_parts(139_471_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UserMigrations` (r:1 w:1)
	/// Proof: `Funding::UserMigrations` (`max_values`: None, `max_size`: Some(1040079), added: 1042554, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UnmigratedCounter` (r:1 w:1)
	/// Proof: `Funding::UnmigratedCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 100]`.
	fn confirm_offchain_migration(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1346 + x * (64 ±0)`
		//  Estimated: `1043544`
		// Minimum execution time: 28_850_000 picoseconds.
		Weight::from_parts(30_326_833, 0)
			.saturating_add(Weight::from_parts(0, 1043544))
			// Standard Error: 646
			.saturating_add(Weight::from_parts(96_781, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	fn start_pallet_migration() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `711`
		//  Estimated: `3795`
		// Minimum execution time: 136_881_000 picoseconds.
		Weight::from_parts(140_451_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::QueryCounter` (r:1 w:1)
	/// Proof: `PolkadotXcm::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ContributionTokens::Asset` (r:1 w:0)
	/// Proof: `ContributionTokens::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::Queries` (r:0 w:2)
	/// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_pallet_migration_readiness_check() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1012`
		//  Estimated: `3795`
		// Minimum execution time: 154_021_000 picoseconds.
		Weight::from_parts(157_881_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Funding::ProjectsDetails` (r:2 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	fn pallet_migration_readiness_response_holding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `924`
		//  Estimated: `6600`
		// Minimum execution time: 25_171_000 picoseconds.
		Weight::from_parts(27_030_000, 0)
			.saturating_add(Weight::from_parts(0, 6600))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Funding::ProjectsDetails` (r:2 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsMetadata` (r:1 w:0)
	/// Proof: `Funding::ProjectsMetadata` (`max_values`: None, `max_size`: Some(437), added: 2912, mode: `MaxEncodedLen`)
	fn pallet_migration_readiness_response_pallet_info() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `924`
		//  Estimated: `6600`
		// Minimum execution time: 25_001_000 picoseconds.
		Weight::from_parts(26_380_000, 0)
			.saturating_add(Weight::from_parts(0, 6600))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UserMigrations` (r:1 w:1)
	/// Proof: `Funding::UserMigrations` (`max_values`: None, `max_size`: Some(1040079), added: 1042554, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::QueryCounter` (r:1 w:1)
	/// Proof: `PolkadotXcm::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::ActiveMigrationQueue` (r:0 w:1)
	/// Proof: `Funding::ActiveMigrationQueue` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::Queries` (r:0 w:1)
	/// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 100]`.
	fn send_pallet_migration_for(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1329 + x * (64 ±0)`
		//  Estimated: `1043544 + x * (64 ±0)`
		// Minimum execution time: 41_400_000 picoseconds.
		Weight::from_parts(43_622_532, 0)
			.saturating_add(Weight::from_parts(0, 1043544))
			// Standard Error: 1_107
			.saturating_add(Weight::from_parts(245_129, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(5))
			.saturating_add(Weight::from_parts(0, 64).saturating_mul(x.into()))
	}
	/// Storage: `Funding::ActiveMigrationQueue` (r:1 w:1)
	/// Proof: `Funding::ActiveMigrationQueue` (`max_values`: None, `max_size`: Some(60), added: 2535, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UserMigrations` (r:1 w:1)
	/// Proof: `Funding::UserMigrations` (`max_values`: None, `max_size`: Some(1040079), added: 1042554, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UnmigratedCounter` (r:1 w:1)
	/// Proof: `Funding::UnmigratedCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	/// The range of component `x` is `[1, 100]`.
	fn confirm_pallet_migration(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1468 + x * (64 ±0)`
		//  Estimated: `1043544`
		// Minimum execution time: 37_141_000 picoseconds.
		Weight::from_parts(38_977_129, 0)
			.saturating_add(Weight::from_parts(0, 1043544))
			// Standard Error: 1_227
			.saturating_add(Weight::from_parts(119_328, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Funding::ProjectsDetails` (r:2 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	fn do_handle_channel_open_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `642`
		//  Estimated: `6600`
		// Minimum execution time: 18_550_000 picoseconds.
		Weight::from_parts(20_020_000, 0)
			.saturating_add(Weight::from_parts(0, 6600))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Funding::ProjectsDetails` (r:2 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::QueryCounter` (r:1 w:1)
	/// Proof: `PolkadotXcm::QueryCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `ContributionTokens::Asset` (r:1 w:0)
	/// Proof: `ContributionTokens::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `PolkadotXcm::Queries` (r:0 w:2)
	/// Proof: `PolkadotXcm::Queries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn do_handle_channel_accepted() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `918`
		//  Estimated: `6600`
		// Minimum execution time: 43_080_000 picoseconds.
		Weight::from_parts(44_980_000, 0)
			.saturating_add(Weight::from_parts(0, 6600))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Funding::ProjectsDetails` (r:1 w:1)
	/// Proof: `Funding::ProjectsDetails` (`max_values`: None, `max_size`: Some(330), added: 2805, mode: `MaxEncodedLen`)
	/// Storage: `Funding::UnmigratedCounter` (r:1 w:0)
	/// Proof: `Funding::UnmigratedCounter` (`max_values`: None, `max_size`: Some(24), added: 2499, mode: `MaxEncodedLen`)
	fn mark_project_ct_migration_as_finished() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `647`
		//  Estimated: `3795`
		// Minimum execution time: 20_160_000 picoseconds.
		Weight::from_parts(21_310_000, 0)
			.saturating_add(Weight::from_parts(0, 3795))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
