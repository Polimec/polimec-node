[package]
name = "polimec-parachain-node"
description = "A new Cumulus FRAME-based Substrate Node, ready for hacking together a parachain."
authors.workspace = true
documentation.workspace = true
edition.workspace = true
homepage.workspace = true
license-file.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

[dependencies]
clap = { workspace = true, features = ["derive"] }
log.workspace = true
parity-scale-codec = { workspace = true }
serde = { workspace = true, features = ["derive"] }
jsonrpsee = { workspace = true, features = ["server"] }
hex-literal.workspace = true
color-print = "0.3.5"

# Local
polimec-parachain-runtime.workspace = true
polimec-base-runtime.workspace = true
pallet-funding.workspace = true

# Substrate
frame-benchmarking.workspace = true
frame-benchmarking-cli.workspace = true
pallet-transaction-payment-rpc.workspace = true
sc-basic-authorship.workspace = true
sc-chain-spec.workspace = true
sc-cli.workspace = true
sc-client-api.workspace = true
sc-consensus.workspace = true
sc-executor.workspace = true
sc-network.workspace = true
sc-network-common.workspace = true
sc-rpc.workspace = true
sc-rpc-api.workspace = true
sc-service.workspace = true
sc-sysinfo.workspace = true
sc-telemetry.workspace = true
sc-tracing.workspace = true
sc-transaction-pool.workspace = true
sc-transaction-pool-api.workspace = true
sc-network-sync.workspace = true
sp-api.workspace = true
sp-block-builder.workspace = true
sp-blockchain.workspace = true
sp-consensus-aura.workspace = true
sp-core.workspace = true
sp-keystore.workspace = true
sp-offchain.workspace = true
sp-io.workspace = true
sp-runtime.workspace = true
sp-session.workspace = true
sp-timestamp.workspace = true
sp-transaction-pool.workspace = true
substrate-frame-rpc-system.workspace = true
substrate-prometheus-endpoint.workspace = true
try-runtime-cli = { workspace = true, optional = true }

# Polkadot
polkadot-cli.workspace = true
polkadot-primitives.workspace = true
polkadot-service.workspace = true
xcm.workspace = true

# Cumulus
cumulus-client-cli.workspace = true
cumulus-client-consensus-aura.workspace = true
cumulus-client-consensus-common.workspace = true
cumulus-client-network.workspace = true
cumulus-client-service.workspace = true
cumulus-primitives-core.workspace = true
cumulus-primitives-parachain-inherent.workspace = true
cumulus-relay-chain-interface.workspace = true
cumulus-relay-chain-inprocess-interface.workspace = true
cumulus-relay-chain-minimal-node.workspace = true
parachains-common.workspace = true

[build-dependencies]
substrate-build-script-utils.workspace = true

[features]
default = []
runtime-benchmarks = [
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"pallet-funding/runtime-benchmarks",
	"polimec-base-runtime/runtime-benchmarks",
	"polimec-parachain-runtime/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"polkadot-service/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"polimec-base-runtime/try-runtime",
	"polimec-parachain-runtime/try-runtime",
	"polkadot-cli/try-runtime",
	"polkadot-service/try-runtime",
	"sp-runtime/try-runtime",
	"try-runtime-cli",
	"try-runtime-cli?/try-runtime",
	"pallet-funding/try-runtime"
]
fast-gov = [ "polimec-parachain-runtime/fast-gov" ]
std = [
	"cumulus-primitives-core/std",
	"frame-benchmarking/std",
	"log/std",
	"pallet-funding/std",
	"parachains-common/std",
	"parity-scale-codec/std",
	"polkadot-primitives/std",
	"serde/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-transaction-pool/std",
	"xcm/std",
]
testing-node = [
	"pallet-funding/testing-node",
	"polimec-base-runtime/testing-node",
	"polimec-parachain-runtime/testing-node",
]
