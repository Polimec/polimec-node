name: Check Set-Up & Build

# Controls when the action will run.
on:
  pull_request:
    branches: [main]
    types: [synchronize, reopened, ready_for_review, labeled]
  label:
    types: [created, deleted]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  RUSTFLAGS: "" # To ovveride the default "-D warnings" that can be too tedious.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  fmt:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    container:
      image: paritytech/ci-linux:production
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Fail fast: check formatting first as it doesn't require compilation
      - name: Check the formatting
        run: cargo +nightly fmt --all --check

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set-Up
        run: sudo apt update && sudo apt install -y protobuf-compiler clang

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Install Rust
        # Using the version specified in the rust-toolchain.toml 
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Test the Parachain
        run: cargo test --locked
